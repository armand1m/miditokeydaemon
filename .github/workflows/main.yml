
on: [push, pull_request]

name: Build, Test, Lint 

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install system dependencies 
        run: sudo apt install librust-alsa-sys-dev libfl-dev

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install system dependencies 
        run: sudo apt install librust-alsa-sys-dev libfl-dev

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install system dependencies 
        run: sudo apt install librust-alsa-sys-dev libfl-dev

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}

#   builds:
#     name: Builds 
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@v2

#       - name: Install system dependencies 
#         run: sudo apt install librust-alsa-sys-dev libfl-dev libxdo-dev
    
#       - name: Build for Linux
#         run: |
#             rustup target add x86_64-unknown-linux-gnu
#             cargo build --release --target x86_64-unknown-linux-gnu
    
#       - name: Build for Windows
#         run: |
#             rustup target add x86_64-pc-windows-msvc
#             cargo build --release --target x86_64-pc-windows-msvc
    
#       - name: Build for macOS
#         run: |
#             rustup target add x86_64-apple-darwin
#             cargo build --release --target x86_64-apple-darwin
    
#       - name: Archive artifacts
#         uses: actions/upload-artifact@v2
#         with:
#           name: binaries
#           path: |
#             target/x86_64-unknown-linux-gnu/release/miditokeydaemon
#             target/x86_64-pc-windows-msvc/release/miditokeydaemon.exe
#             target/x86_64-apple-darwin/release/miditokeydaemon